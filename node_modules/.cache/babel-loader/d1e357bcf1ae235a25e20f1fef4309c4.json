{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { getEarned, getMasterChefContract, getFarms } from '../sushi/utils';\nimport useSushi from './useSushi';\nimport useBlock from './useBlock';\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([]);\n  const {\n    account\n  } = useWallet();\n  const sushi = useSushi();\n  const farms = getFarms(sushi);\n  const masterChefContract = getMasterChefContract(sushi);\n  const block = useBlock();\n  const fetchAllBalances = useCallback(async () => {\n    const balances = await Promise.all(farms.map(({\n      pid\n    }) => getEarned(masterChefContract, pid, account)));\n    setBalance(balances);\n  }, [account, masterChefContract, sushi]);\n  useEffect(() => {\n    if (account && masterChefContract && sushi) {\n      fetchAllBalances();\n    }\n  }, [account, block, masterChefContract, setBalance, sushi]);\n  return balances;\n};\n\nexport default useAllEarnings;","map":{"version":3,"sources":["/Users/matt/Projects/sushiswap-frontend/src/hooks/useAllEarnings.ts"],"names":["useCallback","useEffect","useState","useWallet","getEarned","getMasterChefContract","getFarms","useSushi","useBlock","useAllEarnings","balances","setBalance","account","sushi","farms","masterChefContract","block","fetchAllBalances","Promise","all","map","pid"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAIA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,SAAT,EAAoBC,qBAApB,EAA2CC,QAA3C,QAA2D,gBAA3D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAuDT,SAAS,EAAtE;AACA,QAAMU,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,KAAK,GAAGR,QAAQ,CAACO,KAAD,CAAtB;AACA,QAAME,kBAAkB,GAAGV,qBAAqB,CAACQ,KAAD,CAAhD;AACA,QAAMG,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAMS,gBAAgB,GAAGjB,WAAW,CAAC,YAAY;AAC/C,UAAMU,QAA0B,GAAG,MAAMQ,OAAO,CAACC,GAAR,CACvCL,KAAK,CAACM,GAAN,CAAU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACRjB,SAAS,CAACW,kBAAD,EAAqBM,GAArB,EAA0BT,OAA1B,CADX,CADuC,CAAzC;AAKAD,IAAAA,UAAU,CAACD,QAAD,CAAV;AACD,GAPmC,EAOjC,CAACE,OAAD,EAAUG,kBAAV,EAA8BF,KAA9B,CAPiC,CAApC;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,IAAIG,kBAAX,IAAiCF,KAArC,EAA4C;AAC1CI,MAAAA,gBAAgB;AACjB;AACF,GAJQ,EAIN,CAACL,OAAD,EAAUI,KAAV,EAAiBD,kBAAjB,EAAqCJ,UAArC,EAAiDE,KAAjD,CAJM,CAAT;AAMA,SAAOH,QAAP;AACD,CAxBD;;AA0BA,eAAeD,cAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { provider } from 'web3-core'\n\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\n\nimport { getEarned, getMasterChefContract, getFarms } from '../sushi/utils'\nimport useSushi from './useSushi'\nimport useBlock from './useBlock'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([] as Array<BigNumber>)\n  const { account }: { account: string; ethereum: provider } = useWallet()\n  const sushi = useSushi()\n  const farms = getFarms(sushi)\n  const masterChefContract = getMasterChefContract(sushi)\n  const block = useBlock()\n\n  const fetchAllBalances = useCallback(async () => {\n    const balances: Array<BigNumber> = await Promise.all(\n      farms.map(({ pid }: { pid: number }) =>\n        getEarned(masterChefContract, pid, account),\n      ),\n    )\n    setBalance(balances)\n  }, [account, masterChefContract, sushi])\n\n  useEffect(() => {\n    if (account && masterChefContract && sushi) {\n      fetchAllBalances()\n    }\n  }, [account, block, masterChefContract, setBalance, sushi])\n\n  return balances\n}\n\nexport default useAllEarnings\n"]},"metadata":{},"sourceType":"module"}