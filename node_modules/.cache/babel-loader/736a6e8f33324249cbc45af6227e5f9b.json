{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Projects/sushiswap-frontend/src/views/Farm/components/Stake.tsx\";\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport IconButton from '../../../components/IconButton';\nimport { AddIcon } from '../../../components/icons';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useAllowance from '../../../hooks/useAllowance';\nimport useApprove from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useUnstake from '../../../hooks/useUnstake';\nimport { getBalanceNumber } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\n\nconst Stake = ({\n  lpContract,\n  pid,\n  tokenName\n}) => {\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const allowance = useAllowance(lpContract);\n  const {\n    onApprove\n  } = useApprove(lpContract);\n  const tokenBalance = useTokenBalance(lpContract.options.address);\n  const stakedBalance = useStakedBalance(pid);\n  const {\n    onStake\n  } = useStake(pid);\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: onStake,\n    tokenName: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDF73\"), /*#__PURE__*/React.createElement(Value, {\n    value: getBalanceNumber(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `${tokenName} Tokens Staked`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, !allowance.toNumber() ? /*#__PURE__*/React.createElement(Button, {\n    disabled: requestedApproval,\n    onClick: handleApprove,\n    text: `Approve ${tokenName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: stakedBalance.eq(new BigNumber(0)),\n    text: \"Unstake\",\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["/Users/matt/Projects/sushiswap-frontend/src/views/Farm/components/Stake.tsx"],"names":["BigNumber","React","useCallback","useState","styled","Button","Card","CardContent","CardIcon","IconButton","AddIcon","Label","Value","useAllowance","useApprove","useModal","useStake","useStakedBalance","useTokenBalance","useUnstake","getBalanceNumber","DepositModal","WithdrawModal","Stake","lpContract","pid","tokenName","requestedApproval","setRequestedApproval","allowance","onApprove","tokenBalance","options","address","stakedBalance","onStake","onUnstake","onPresentDeposit","onPresentWithdraw","handleApprove","txHash","e","console","log","toNumber","eq","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledActionSpacer","StyledCardContentInner"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Contract } from 'web3-eth-contract'\nimport Button from '../../../components/Button'\nimport Card from '../../../components/Card'\nimport CardContent from '../../../components/CardContent'\nimport CardIcon from '../../../components/CardIcon'\nimport IconButton from '../../../components/IconButton'\nimport { AddIcon } from '../../../components/icons'\nimport Label from '../../../components/Label'\nimport Value from '../../../components/Value'\nimport useAllowance from '../../../hooks/useAllowance'\nimport useApprove from '../../../hooks/useApprove'\nimport useModal from '../../../hooks/useModal'\nimport useStake from '../../../hooks/useStake'\nimport useStakedBalance from '../../../hooks/useStakedBalance'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport useUnstake from '../../../hooks/useUnstake'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\n\ninterface StakeProps {\n  lpContract: Contract\n  pid: number\n  tokenName: string\n}\n\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName }) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const allowance = useAllowance(lpContract)\n  const { onApprove } = useApprove(lpContract)\n\n  const tokenBalance = useTokenBalance(lpContract.options.address)\n  const stakedBalance = useStakedBalance(pid)\n\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={onStake}\n      tokenName={tokenName}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={tokenName}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>👨🏻‍🍳</CardIcon>\n            <Value value={getBalanceNumber(stakedBalance)} />\n            <Label text={`${tokenName} Tokens Staked`} />\n          </StyledCardHeader>\n          <StyledCardActions>\n            {!allowance.toNumber() ? (\n              <Button\n                disabled={requestedApproval}\n                onClick={handleApprove}\n                text={`Approve ${tokenName}`}\n              />\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0))}\n                  text=\"Unstake\"\n                  onClick={onPresentWithdraw}\n                />\n                <StyledActionSpacer />\n                <IconButton onClick={onPresentDeposit}>\n                  <AddIcon />\n                </IconButton>\n              </>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}