{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Projects/sushiswap-frontend/src/views/Farms/components/FarmCards.tsx\";\nimport BigNumber from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport Countdown from 'react-countdown';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Loader from '../../../components/Loader';\nimport Spacer from '../../../components/Spacer';\nimport useAllStakedValue from '../../../hooks/useAllStakedValue';\nimport useFarms from '../../../hooks/useFarms';\nimport useSushi from '../../../hooks/useSushi';\nimport { getEarned, getMasterChefContract } from '../../../sushi/utils';\nimport { bnToDec } from '../../../utils';\n\nconst FarmCards = () => {\n  const [farms] = useFarms();\n  const {\n    account\n  } = useWallet();\n  const stakedValue = useAllStakedValue();\n  const sushiIndex = farms.findIndex(({\n    tokenSymbol\n  }) => tokenSymbol === 'SUSHI');\n  const sushiPrice = sushiIndex >= 0 && stakedValue[sushiIndex] ? stakedValue[sushiIndex].tokenPriceInWeth : new BigNumber(0);\n  const BLOCKS_PER_YEAR = new BigNumber(2336000);\n  const SUSHI_PER_BLOCK = new BigNumber(1000);\n  const rows = farms.reduce((farmRows, farm, i) => {\n    const farmWithStakedValue = { ...farm,\n      ...stakedValue[i],\n      apy: stakedValue[i] ? sushiPrice.times(SUSHI_PER_BLOCK).times(BLOCKS_PER_YEAR).times(stakedValue[i].poolWeight).div(stakedValue[i].totalWethValue) : null\n    };\n    const newFarmRows = [...farmRows];\n\n    if (newFarmRows[newFarmRows.length - 1].length === 3) {\n      newFarmRows.push([farmWithStakedValue]);\n    } else {\n      newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue);\n    }\n\n    return newFarmRows;\n  }, [[]]);\n  return /*#__PURE__*/React.createElement(StyledCards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, !!rows[0].length ? rows.map((farmRow, i) => /*#__PURE__*/React.createElement(StyledRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, farmRow.map((farm, j) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FarmCard, {\n    farm: farm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), (j === 0 || j === 1) && /*#__PURE__*/React.createElement(StyledSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 42\n    }\n  }))))) : /*#__PURE__*/React.createElement(StyledLoadingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    text: \"Cooking the rice ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst FarmCard = ({\n  farm\n}) => {\n  const [startTime, setStartTime] = useState(0);\n  const [harvestable, setHarvestable] = useState(0);\n  const {\n    account\n  } = useWallet();\n  const {\n    lpTokenAddress\n  } = farm;\n  const sushi = useSushi();\n\n  const renderer = countdownProps => {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = countdownProps;\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    const paddedHours = hours < 10 ? `0${hours}` : hours;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, paddedHours, \":\", paddedMinutes, \":\", paddedSeconds);\n  };\n\n  useEffect(() => {\n    async function fetchEarned() {\n      if (sushi) return;\n      const earned = await getEarned(getMasterChefContract(sushi), lpTokenAddress, account);\n      setHarvestable(bnToDec(earned));\n    }\n\n    if (sushi && account) {\n      fetchEarned();\n    }\n  }, [sushi, lpTokenAddress, account, setHarvestable]);\n  const poolActive = true; // startTime * 1000 - Date.now() <= 0\n\n  return /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, farm.tokenSymbol === 'DUMP' && /*#__PURE__*/React.createElement(StyledCardAccent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, farm.icon), /*#__PURE__*/React.createElement(StyledTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, farm.name), /*#__PURE__*/React.createElement(StyledDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Deposit \", farm.lpToken.toUpperCase()), /*#__PURE__*/React.createElement(StyledDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Earn \", farm.earnToken.toUpperCase())), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !poolActive,\n    text: poolActive ? 'Burn' : undefined,\n    to: `/farms/${farm.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, !poolActive && /*#__PURE__*/React.createElement(Countdown, {\n    date: new Date(startTime * 1000),\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledInsight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"APY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, farm.apy ? `${farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)}%` : 'Loading ...'))))));\n};\n\nconst StyledCardAccent = styled.div`\n  border-radius: 12px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\nconst StyledCards = styled.div`\n  width: 900px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\nconst StyledRow = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  width: calc((900px - ${props => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`;\nconst StyledTitle = styled.h4`\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 24px;\n  font-weight: 700;\n  margin: ${props => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`;\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledDetails = styled.div`\n  margin-top: ${props => props.theme.spacing[2]}px;\n  text-align: center;\n`;\nconst StyledDetail = styled.div`\n  color: ${props => props.theme.color.grey[500]};\n`;\nconst StyledInsight = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background: #fffdfa;\n  color: #aa9584;\n  width: 100%;\n  margin-top: 12px;\n  line-height: 32px;\n  font-size: 13px;\n  border: 1px solid #e6dcd5;\n  text-align: center;\n  padding: 0 12px;\n`;\nexport default FarmCards;","map":{"version":3,"sources":["/Users/matt/Projects/sushiswap-frontend/src/views/Farms/components/FarmCards.tsx"],"names":["BigNumber","React","useEffect","useState","Countdown","styled","useWallet","Button","Card","CardContent","CardIcon","Loader","Spacer","useAllStakedValue","useFarms","useSushi","getEarned","getMasterChefContract","bnToDec","FarmCards","farms","account","stakedValue","sushiIndex","findIndex","tokenSymbol","sushiPrice","tokenPriceInWeth","BLOCKS_PER_YEAR","SUSHI_PER_BLOCK","rows","reduce","farmRows","farm","i","farmWithStakedValue","apy","times","poolWeight","div","totalWethValue","newFarmRows","length","push","map","farmRow","j","FarmCard","startTime","setStartTime","harvestable","setHarvestable","lpTokenAddress","sushi","renderer","countdownProps","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","width","fetchEarned","earned","poolActive","icon","name","lpToken","toUpperCase","earnToken","undefined","id","Date","toNumber","toLocaleString","slice","StyledCardAccent","StyledCards","StyledLoadingWrapper","StyledRow","props","theme","spacing","StyledCardWrapper","StyledTitle","h4","color","grey","StyledContent","StyledSpacer","StyledDetails","StyledDetail","StyledInsight"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useEffect, useState } from 'react'\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\nimport styled, { keyframes } from 'styled-components'\nimport { useWallet } from 'use-wallet'\nimport Button from '../../../components/Button'\nimport Card from '../../../components/Card'\nimport CardContent from '../../../components/CardContent'\nimport CardIcon from '../../../components/CardIcon'\nimport Loader from '../../../components/Loader'\nimport Spacer from '../../../components/Spacer'\nimport { Farm } from '../../../contexts/Farms'\nimport useAllStakedValue, {\n  StakedValue,\n} from '../../../hooks/useAllStakedValue'\nimport useFarms from '../../../hooks/useFarms'\nimport useSushi from '../../../hooks/useSushi'\nimport { getEarned, getMasterChefContract } from '../../../sushi/utils'\nimport { bnToDec } from '../../../utils'\n\ninterface FarmWithStakedValue extends Farm, StakedValue {\n  apy: BigNumber\n}\n\nconst FarmCards: React.FC = () => {\n  const [farms] = useFarms()\n  const { account } = useWallet()\n  const stakedValue = useAllStakedValue()\n\n  const sushiIndex = farms.findIndex(\n    ({ tokenSymbol }) => tokenSymbol === 'SUSHI',\n  )\n\n  const sushiPrice =\n    sushiIndex >= 0 && stakedValue[sushiIndex]\n      ? stakedValue[sushiIndex].tokenPriceInWeth\n      : new BigNumber(0)\n\n  const BLOCKS_PER_YEAR = new BigNumber(2336000)\n  const SUSHI_PER_BLOCK = new BigNumber(1000)\n\n  const rows = farms.reduce<FarmWithStakedValue[][]>(\n    (farmRows, farm, i) => {\n      const farmWithStakedValue = {\n        ...farm,\n        ...stakedValue[i],\n        apy: stakedValue[i]\n          ? sushiPrice\n              .times(SUSHI_PER_BLOCK)\n              .times(BLOCKS_PER_YEAR)\n              .times(stakedValue[i].poolWeight)\n              .div(stakedValue[i].totalWethValue)\n          : null,\n      }\n      const newFarmRows = [...farmRows]\n      if (newFarmRows[newFarmRows.length - 1].length === 3) {\n        newFarmRows.push([farmWithStakedValue])\n      } else {\n        newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue)\n      }\n      return newFarmRows\n    },\n    [[]],\n  )\n\n  return (\n    <StyledCards>\n      {!!rows[0].length ? (\n        rows.map((farmRow, i) => (\n          <StyledRow key={i}>\n            {farmRow.map((farm, j) => (\n              <React.Fragment key={j}>\n                <FarmCard farm={farm} />\n                {(j === 0 || j === 1) && <StyledSpacer />}\n              </React.Fragment>\n            ))}\n          </StyledRow>\n        ))\n      ) : (\n        <StyledLoadingWrapper>\n          <Loader text=\"Cooking the rice ...\" />\n        </StyledLoadingWrapper>\n      )}\n    </StyledCards>\n  )\n}\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm }) => {\n  const [startTime, setStartTime] = useState(0)\n  const [harvestable, setHarvestable] = useState(0)\n\n  const { account } = useWallet()\n  const { lpTokenAddress } = farm\n  const sushi = useSushi()\n\n  const renderer = (countdownProps: CountdownRenderProps) => {\n    const { hours, minutes, seconds } = countdownProps\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\n    const paddedHours = hours < 10 ? `0${hours}` : hours\n    return (\n      <span style={{ width: '100%' }}>\n        {paddedHours}:{paddedMinutes}:{paddedSeconds}\n      </span>\n    )\n  }\n\n  useEffect(() => {\n    async function fetchEarned() {\n      if (sushi) return\n      const earned = await getEarned(\n        getMasterChefContract(sushi),\n        lpTokenAddress,\n        account,\n      )\n      setHarvestable(bnToDec(earned))\n    }\n    if (sushi && account) {\n      fetchEarned()\n    }\n  }, [sushi, lpTokenAddress, account, setHarvestable])\n\n  const poolActive = true // startTime * 1000 - Date.now() <= 0\n\n  return (\n    <StyledCardWrapper>\n      {farm.tokenSymbol === 'DUMP' && <StyledCardAccent />}\n      <Card>\n        <CardContent>\n          <StyledContent>\n            <CardIcon>{farm.icon}</CardIcon>\n            <StyledTitle>{farm.name}</StyledTitle>\n            <StyledDetails>\n              <StyledDetail>Deposit {farm.lpToken.toUpperCase()}</StyledDetail>\n              <StyledDetail>Earn {farm.earnToken.toUpperCase()}</StyledDetail>\n            </StyledDetails>\n            <Spacer />\n            <Button\n              disabled={!poolActive}\n              text={poolActive ? 'Burn' : undefined}\n              to={`/farms/${farm.id}`}\n            >\n              {!poolActive && (\n                <Countdown\n                  date={new Date(startTime * 1000)}\n                  renderer={renderer}\n                />\n              )}\n            </Button>\n            <StyledInsight>\n              <span>APY</span>\n              <span>\n                {farm.apy\n                  ? `${farm.apy\n                      .times(new BigNumber(100))\n                      .toNumber()\n                      .toLocaleString('en-US')\n                      .slice(0, -1)}%`\n                  : 'Loading ...'}\n              </span>\n              {/* <span>\n                {farm.tokenAmount\n                  ? (farm.tokenAmount.toNumber() || 0).toLocaleString('en-US')\n                  : '-'}{' '}\n                {farm.tokenSymbol}\n              </span>\n              <span>\n                {farm.wethAmount\n                  ? (farm.wethAmount.toNumber() || 0).toLocaleString('en-US')\n                  : '-'}{' '}\n                ETH\n              </span> */}\n            </StyledInsight>\n          </StyledContent>\n        </CardContent>\n      </Card>\n    </StyledCardWrapper>\n  )\n}\n\n\nconst StyledCardAccent = styled.div`\n  border-radius: 12px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst StyledCards = styled.div`\n  width: 900px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`\n\nconst StyledRow = styled.div`\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  width: calc((900px - ${(props) => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`\n\nconst StyledTitle = styled.h4`\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 24px;\n  font-weight: 700;\n  margin: ${(props) => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`\n\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n  text-align: center;\n`\n\nconst StyledDetail = styled.div`\n  color: ${(props) => props.theme.color.grey[500]};\n`\n\nconst StyledInsight = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background: #fffdfa;\n  color: #aa9584;\n  width: 100%;\n  margin-top: 12px;\n  line-height: 32px;\n  font-size: 13px;\n  border: 1px solid #e6dcd5;\n  text-align: center;\n  padding: 0 12px;\n`\n\nexport default FarmCards\n"]},"metadata":{},"sourceType":"module"}